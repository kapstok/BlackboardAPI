# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    exclude:
    - cli/
    - '**/readme.md'

variables:
- name: packageName
  value: blackboardlib

jobs:
- job: Build_Library
  pool:
    vmImage: 'Ubuntu 16.04'

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '11.x'
    displayName: 'Install Node.js'

  - script: |
        if [[ $(version) =~ ^[0-9]*?\.[0-9]*?\.[0-9]*?$ ]]; then
            IFS=. read major minor patch <<<"$(version)"
        else 
            if [ -z "$(incrementPatch)" ]; then incrementPatch=1; fi
            latestVersion=`npm show $(packageName) version`
            IFS=. read major minor patch <<<"${latestVersion}"
            if [ "$(incrementMajor)" = 1 ]; then major=$(expr $major + 1); fi
            if [ "$(incrementMinor)" = 1 ]; then minor=$(expr $minor + 1); fi
            if [ "$incrementPatch" = 1 ] || [ "$(incrementPatch)" = 1 ]; then patch=$(expr $patch + 1); fi  
        fi
        echo '##vso[task.setvariable variable=major]'$major
        echo '##vso[task.setvariable variable=minor]'$minor
        echo '##vso[task.setvariable variable=patch]'$patch
        echo "Major: ${major}"
        echo "Minor: ${minor}"
        echo "Patch: ${patch}"
        newVersion=$major.$minor.$patch
        eval npm version --no-git-tag-version $newVersion
    displayName: Set version variables

  - script: |
        echo "Major: $(major)"
        echo "Minor: $(minor)"
        echo "Patch: $(patch)"

  - script: |
      npm install
      npm run build
    displayName: 'npm install and build'

  - task: PublishBuildArtifacts@1
    inputs:
      ArtifactName: 'lib'
      PathtoPublish: '$(Build.SourcesDirectory)/dist'
